{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}

{% block paragraph %}
{{ attach_library('futurospossiveis2021/paragraph--chamada-video') }}
	<div{{attributes.addClass(classes)}}>
		{% block content %}
			<div class="paragraph-video-containner-full">
				{# <div class="text-container">
					<div class="title-container">
						<div class="texto-data">{{ content.field_data_evento }}</div>
						<h3 class="title">{{content.field_title.0|e|striptags|trim}}</h3>
					</div>

			</div> #}

       <div class="container">
            <div class="row">

                <div class="col-md-6 col-sm-12">
                   <div class="texto-italic">VEM A√ç ...</div>
                  <div class="texto-title-video">{{content.field_titulo.0}}</div>
                  <div class="texto-data d-flex"><span>{{content.field_data_evento.0}}</span></div>
                  <div class="texto-descricao">
                    <p>{{content.field_descricao}}</p>
                  </div>
                </div>

                <div class="col-md-6 col-sm-12 text-center">
                  {{ content.field_video }}
                  <a href="{{ paragraph.field_link.uri }}" target="_blank" onclick="gtag('event','clique',{'event_category':'download','event_label':'ffp2022-baixe-report'})"><div class="link-video">{{ paragraph.field_link.title }}</div>
                  <div  class="link-video-botton-download"><img src="/themes/futurospossiveis2021/static/img/bt-download.jpg" height="25" width="30"></div>
                  </a>

            </div>

	</div>
	</div>
	</div>
		{% endblock %}
{% endblock paragraph %}
